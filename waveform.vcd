$version Generated by VerilatedVcd $end
$date Sat Mar 12 01:40:06 2022
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 )' clk $end
  $var wire  1 1' rst $end
  $scope module $unit $end
   $var wire 32 o* i_add [31:0] $end
   $var wire 32 '* i_addi [31:0] $end
   $var wire 32 Q+ i_and [31:0] $end
   $var wire 32 O* i_andi [31:0] $end
   $var wire 32 c( i_auipc [31:0] $end
   $var wire 32 {( i_beq [31:0] $end
   $var wire 32 5) i_bge [31:0] $end
   $var wire 32 =) i_bgeu [31:0] $end
   $var wire 32 -) i_blt [31:0] $end
   $var wire 32 a' i_bltu [31:0] $end
   $var wire 32 %) i_bne [31:0] $end
   $var wire 32 y+ i_csrrc [31:0] $end
   $var wire 32 3, i_csrrci [31:0] $end
   $var wire 32 q+ i_csrrs [31:0] $end
   $var wire 32 +, i_csrrsi [31:0] $end
   $var wire 32 i+ i_csrrw [31:0] $end
   $var wire 32 #, i_csrrwi [31:0] $end
   $var wire 32 a+ i_ebreak [31:0] $end
   $var wire 32 Y+ i_ecall [31:0] $end
   $var wire 32 k( i_jal [31:0] $end
   $var wire 32 s( i_jalr [31:0] $end
   $var wire 32 E) i_lb [31:0] $end
   $var wire 32 ]) i_lbu [31:0] $end
   $var wire 32 M) i_lh [31:0] $end
   $var wire 32 e) i_lhu [31:0] $end
   $var wire 32 A' i_lui [31:0] $end
   $var wire 32 U) i_lw [31:0] $end
   $var wire 32 I+ i_or [31:0] $end
   $var wire 32 G* i_ori [31:0] $end
   $var wire 32 m) i_sb [31:0] $end
   $var wire 32 u) i_sh [31:0] $end
   $var wire 32 !+ i_sll [31:0] $end
   $var wire 32 W* i_slli [31:0] $end
   $var wire 32 )+ i_slt [31:0] $end
   $var wire 32 /* i_slti [31:0] $end
   $var wire 32 7* i_sltiu [31:0] $end
   $var wire 32 1+ i_sltu [31:0] $end
   $var wire 32 A+ i_sra [31:0] $end
   $var wire 32 g* i_srai [31:0] $end
   $var wire 32 9+ i_srl [31:0] $end
   $var wire 32 _* i_srli [31:0] $end
   $var wire 32 w* i_sub [31:0] $end
   $var wire 32 }) i_sw [31:0] $end
   $var wire 32 i' i_xor [31:0] $end
   $var wire 32 ?* i_xori [31:0] $end
  $upscope $end
  $scope module tinyrv32 $end
   $var wire 32 S$ alu_out [31:0] $end
   $var wire  1 3$ b_enable $end
   $var wire  1 )' clk $end
   $var wire 32 S$ dmem_addr [31:0] $end
   $var wire 32 c dmem_in [31:0] $end
   $var wire 32 S dmem_out [31:0] $end
   $var wire  1 I' dmem_r_enable $end
   $var wire  1 #$ dmem_w_enable $end
   $var wire  1 [$ fetch_clk $end
   $var wire  3 s$ func3 [2:0] $end
   $var wire  7 {$ func7 [6:0] $end
   $var wire 32 A' imem_data_in [31:0] $end
   $var wire 32 Y# imem_data_out [31:0] $end
   $var wire  1 I' imem_r_enable $end
   $var wire  1 9' imem_w_enable $end
   $var wire 32 a# imm32 [31:0] $end
   $var wire  6 i# instr_id [5:0] $end
   $var wire  1 Q' lbu $end
   $var wire  1 Y' lhu $end
   $var wire  7 q# opcode [6:0] $end
   $var wire 32 +$ pc_imm_in [31:0] $end
   $var wire 32 Q# pc_out [31:0] $end
   $var wire  5 g& rd [4:0] $end
   $var wire  1 I' reg_file_read $end
   $var wire  1 y# reg_file_write $end
   $var wire 32 K$ rf_write_val [31:0] $end
   $var wire  5 k$ rs1 [4:0] $end
   $var wire 32 ;$ rs1_val [31:0] $end
   $var wire  5 _& rs2 [4:0] $end
   $var wire 32 C$ rs2_val [31:0] $end
   $var wire  1 1' rst $end
   $var wire  5 _& shamt [4:0] $end
   $var wire  1 c$ write_clk $end
   $scope module alu32 $end
    $var wire 32 i' WIDTH [31:0] $end
    $var wire  1 )' clk $end
    $var wire 32 a# imm [31:0] $end
    $var wire 32 ?& imm_r [31:0] $end
    $var wire  6 i# instr_in [5:0] $end
    $var wire  6 G& instr_in_r [5:0] $end
    $var wire 32 S$ out [31:0] $end
    $var wire 32 Q# pc [31:0] $end
    $var wire 32 W& pc_r [31:0] $end
    $var wire 32 S$ result [31:0] $end
    $var wire 32 ;$ rs1 [31:0] $end
    $var wire 32 /& rs1_r [31:0] $end
    $var wire 32 C$ rs2 [31:0] $end
    $var wire 32 7& rs2_r [31:0] $end
    $var wire  1 1' rst $end
    $var wire  5 _& shamt [4:0] $end
    $var wire  5 O& shamt_r [4:0] $end
   $upscope $end
   $scope module clk_div $end
    $var wire  1 )' clk_in $end
    $var wire  1 [$ clk_out1 $end
    $var wire  1 c$ clk_out2 $end
    $var wire 32 [ counter [31:0] $end
    $var wire 32 a' divider [31:0] $end
    $var wire 32 A' ratio1 [31:0] $end
    $var wire 32 A' ratio2 [31:0] $end
   $upscope $end
   $scope module dec $end
    $var wire  7 ;( b_opcode [6:0] $end
    $var wire  1 )' clk $end
    $var wire 32 S( ebreak [31:0] $end
    $var wire 32 [( ecall [31:0] $end
    $var wire  3 s$ func3 [2:0] $end
    $var wire  3 s$ func3_r [2:0] $end
    $var wire  7 {$ func7 [6:0] $end
    $var wire  7 {$ func7_r [6:0] $end
    $var wire  7 # i_opcode(0) [6:0] $end
    $var wire  7 $ i_opcode(1) [6:0] $end
    $var wire  7 % i_opcode(2) [6:0] $end
    $var wire  7 & i_opcode(3) [6:0] $end
    $var wire 32 a# imm [31:0] $end
    $var wire 32 a# imm_r [31:0] $end
    $var wire 32 Y# instr [31:0] $end
    $var wire  6 i# instr_id [5:0] $end
    $var wire  6 i# instr_id_r [5:0] $end
    $var wire 32 E% instr_r [31:0] $end
    $var wire  7 3( j_opcode [6:0] $end
    $var wire  7 M% opcode_r [6:0] $end
    $var wire  7 K( r_opcode [6:0] $end
    $var wire  5 g& rd [4:0] $end
    $var wire  5 g& rd_r [4:0] $end
    $var wire  5 k$ rs1 [4:0] $end
    $var wire  5 k$ rs1_r [4:0] $end
    $var wire  5 _& rs2 [4:0] $end
    $var wire  5 _& rs2_r [4:0] $end
    $var wire  7 C( s_opcode [6:0] $end
    $var wire  5 _& shamt [4:0] $end
    $var wire  7 C u_opcode(0) [6:0] $end
    $var wire  7 D u_opcode(1) [6:0] $end
   $upscope $end
   $scope module dmem $end
    $var wire 64 #( MEM_INIT_FILE [63:0] $end
    $var wire 32 q' SIZE [31:0] $end
    $var wire 32 i' WIDTH [31:0] $end
    $var wire 32 S$ addr_select [31:0] $end
    $var wire 32 }% addr_select_r [31:0] $end
    $var wire  1 )' clk $end
    $var wire 32 c data_in [31:0] $end
    $var wire 32 '& data_in_r [31:0] $end
    $var wire 32 S data_out [31:0] $end
    $var wire  1 I' r_enable $end
    $var wire  1 u% r_enable_r $end
    $var wire  1 #$ w_enable $end
    $var wire  1 m% w_enable_r $end
   $upscope $end
   $scope module imem $end
    $var wire 64 #( MEM_INIT_FILE [63:0] $end
    $var wire 32 q' SIZE [31:0] $end
    $var wire 32 i' WIDTH [31:0] $end
    $var wire 32 Q# addr_select [31:0] $end
    $var wire 32 5% addr_select_r [31:0] $end
    $var wire  1 )' clk $end
    $var wire 32 y' data_in [31:0] $end
    $var wire 32 =% data_in_r [31:0] $end
    $var wire 32 Y# data_out [31:0] $end
    $var wire  1 I' r_enable $end
    $var wire  1 -% r_enable_r $end
    $var wire  1 9' w_enable $end
    $var wire  1 %% w_enable_r $end
   $upscope $end
   $scope module pc32 $end
    $var wire 32 i' WIDTH [31:0] $end
    $var wire  1 3$ branch $end
    $var wire  1 [$ clk $end
    $var wire 32 +$ immediate [31:0] $end
    $var wire 32 Q# pc_out_reg [31:0] $end
    $var wire  1 1' rst $end
   $upscope $end
   $scope module rfile32 $end
    $var wire 32 i' WIDTH [31:0] $end
    $var wire  1 )' r_clk $end
    $var wire  1 I' r_enable $end
    $var wire  1 e% r_enable_reg $end
    $var wire 32 k r_file(0) [31:0] $end
    $var wire 32 l r_file(1) [31:0] $end
    $var wire 32 u r_file(10) [31:0] $end
    $var wire 32 v r_file(11) [31:0] $end
    $var wire 32 w r_file(12) [31:0] $end
    $var wire 32 x r_file(13) [31:0] $end
    $var wire 32 y r_file(14) [31:0] $end
    $var wire 32 z r_file(15) [31:0] $end
    $var wire 32 { r_file(16) [31:0] $end
    $var wire 32 | r_file(17) [31:0] $end
    $var wire 32 } r_file(18) [31:0] $end
    $var wire 32 ~ r_file(19) [31:0] $end
    $var wire 32 m r_file(2) [31:0] $end
    $var wire 32 !! r_file(20) [31:0] $end
    $var wire 32 "! r_file(21) [31:0] $end
    $var wire 32 #! r_file(22) [31:0] $end
    $var wire 32 $! r_file(23) [31:0] $end
    $var wire 32 %! r_file(24) [31:0] $end
    $var wire 32 &! r_file(25) [31:0] $end
    $var wire 32 '! r_file(26) [31:0] $end
    $var wire 32 (! r_file(27) [31:0] $end
    $var wire 32 )! r_file(28) [31:0] $end
    $var wire 32 *! r_file(29) [31:0] $end
    $var wire 32 n r_file(3) [31:0] $end
    $var wire 32 +! r_file(30) [31:0] $end
    $var wire 32 ,! r_file(31) [31:0] $end
    $var wire 32 o r_file(4) [31:0] $end
    $var wire 32 p r_file(5) [31:0] $end
    $var wire 32 q r_file(6) [31:0] $end
    $var wire 32 r r_file(7) [31:0] $end
    $var wire 32 s r_file(8) [31:0] $end
    $var wire 32 t r_file(9) [31:0] $end
    $var wire  5 g& rd_select [4:0] $end
    $var wire  5 o& rd_select_reg [4:0] $end
    $var wire 32 ;$ rs1_out [31:0] $end
    $var wire  5 k$ rs1_select [4:0] $end
    $var wire  5 U% rs1_select_reg [4:0] $end
    $var wire 32 C$ rs2_out [31:0] $end
    $var wire  5 _& rs2_select [4:0] $end
    $var wire  5 ]% rs2_select_reg [4:0] $end
    $var wire  1 c$ w_clk $end
    $var wire  1 y# w_enable $end
    $var wire  1 !' w_enable_reg $end
    $var wire 32 K$ w_val [31:0] $end
    $var wire 32 w& w_val_reg [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000011 #
b0010011 $
b1100111 %
b1110011 &
b0110111 C
b0010111 D
b00000000000100000000000010010011 S
b00000000000000000000000000000000 [
b00000000000000000000000000000000 c
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 Q#
b00000000000100000000000010010011 Y#
b00000000000000000000000000000000 a#
b111111 i#
b0010011 q#
1y#
0#$
b00000000000000000000000000000000 +$
03$
b00000000000000000000000000000000 ;$
b00000000000000000000000000000000 C$
b00000000000000000000000000000000 K$
b00000000000000000000000000000000 S$
0[$
0c$
b00000 k$
b000 s$
b0000000 {$
0%%
0-%
b00000000000000000000000000000000 5%
b00000000000000000000000000000000 =%
b00000000000000000000000000000000 E%
b0000000 M%
b00000 U%
b00000 ]%
0e%
0m%
0u%
b00000000000000000000000000000000 }%
b00000000000000000000000000000000 '&
b00000000000000000000000000000000 /&
b00000000000000000000000000000000 7&
b00000000000000000000000000000000 ?&
b000000 G&
b00000 O&
b00000000000000000000000000000000 W&
b00000 _&
b00000 g&
b00000 o&
b00000000000000000000000000000000 w&
0!'
1)'
01'
09'
b00000000000000000000000000000000 A'
1I'
0Q'
0Y'
b00000000000000000000000000001000 a'
b00000000000000000000000000100000 i'
b00000000000000000000000010000000 q'
b00000000000000000000000000000000 y'
b0111010001100101011100110111010000101110011101000111100001110100 #(
b1101111 3(
b1100011 ;(
b0100011 C(
b0110011 K(
b00000000000000000000000001110011 S(
b00000001000000000000000001110011 [(
b00000000000000000000000000000001 c(
b00000000000000000000000000000010 k(
b00000000000000000000000000000011 s(
b00000000000000000000000000000100 {(
b00000000000000000000000000000101 %)
b00000000000000000000000000000110 -)
b00000000000000000000000000000111 5)
b00000000000000000000000000001001 =)
b00000000000000000000000000001010 E)
b00000000000000000000000000001011 M)
b00000000000000000000000000001100 U)
b00000000000000000000000000001101 ])
b00000000000000000000000000001110 e)
b00000000000000000000000000001111 m)
b00000000000000000000000000010000 u)
b00000000000000000000000000010001 })
b00000000000000000000000000010010 '*
b00000000000000000000000000010011 /*
b00000000000000000000000000010100 7*
b00000000000000000000000000010101 ?*
b00000000000000000000000000010110 G*
b00000000000000000000000000010111 O*
b00000000000000000000000000011000 W*
b00000000000000000000000000011001 _*
b00000000000000000000000000011010 g*
b00000000000000000000000000011011 o*
b00000000000000000000000000011100 w*
b00000000000000000000000000011101 !+
b00000000000000000000000000011110 )+
b00000000000000000000000000011111 1+
b00000000000000000000000000100001 9+
b00000000000000000000000000100010 A+
b00000000000000000000000000100011 I+
b00000000000000000000000000100100 Q+
b00000000000000000000000000100101 Y+
b00000000000000000000000000100110 a+
b00000000000000000000000000100111 i+
b00000000000000000000000000101000 q+
b00000000000000000000000000101001 y+
b00000000000000000000000000101010 #,
b00000000000000000000000000101011 +,
b00000000000000000000000000101100 3,
#1
0)'
#2
b00000000000000000000000000000001 [
b00000000000000000000000000000001 Q#
b00000000000000000000000000000001 a#
b010010 i#
b00000000000000000000000000000001 +$
1[$
1c$
1-%
b00000000000100000000000010010011 E%
b0010011 M%
1e%
1u%
b111111 G&
b00001 _&
b00001 g&
1!'
1)'
#3
0)'
#4
b00000000000000000000000000000010 [
b00000000000100001000000010010011 Y#
b00000000000000000000000000000001 K$
b00000000000000000000000000000001 S$
b00000000000000000000000000000001 5%
b00001 ]%
b00000000000000000000000000000001 ?&
b010010 G&
b00001 O&
b00000000000000000000000000000001 W&
b00001 o&
1)'
#5
0)'
#6
b00000000000100001000000010010011 S
b00000000000000000000000000000011 [
b00001 k$
b00000000000100001000000010010011 E%
b00000000000000000000000000000001 }%
b00000000000000000000000000000001 w&
1)'
#7
0)'
#8
b00000000000000000000000000000100 [
b00001 U%
1)'
#9
0)'
#10
b00000000000000000000000000000101 [
0[$
1)'
#11
0)'
#12
b00000000000000000000000000000110 [
1)'
#13
0)'
#14
b00000000000000000000000000000111 [
b00000000000000000000000000000001 c
b00000000000000000000000000000001 l
b00000000000000000000000000000001 ;$
b00000000000000000000000000000001 C$
0c$
1)'
#15
0)'
#16
b00000000000000000000000000000000 [
b00000000000000000000000000000010 K$
b00000000000000000000000000000010 S$
b00000000000000000000000000000001 '&
b00000000000000000000000000000001 /&
b00000000000000000000000000000001 7&
1)'
#17
0)'
#18
b00000000000000000000000000000001 [
b00000000000000000000000000000010 Q#
1[$
1c$
b00000000000000000000000000000010 }%
b00000000000000000000000000000010 w&
1)'
#19
0)'
#20
b00000000000000000000000000000010 [
b00000000000000000000000000000010 5%
b00000000000000000000000000000010 W&
1)'
#21
0)'
#22
b00000000000000000000000000000011 [
1)'
#23
0)'
#24
b00000000000000000000000000000100 [
1)'
#25
0)'
#26
b00000000000000000000000000000101 [
0[$
1)'
#27
0)'
#28
b00000000000000000000000000000110 [
1)'
#29
0)'
#30
b00000000000000000000000000000111 [
b00000000000000000000000000000010 c
b00000000000000000000000000000010 l
b00000000000000000000000000000010 ;$
b00000000000000000000000000000010 C$
0c$
1)'
#31
0)'
#32
b00000000000000000000000000000000 [
b00000000000000000000000000000011 K$
b00000000000000000000000000000011 S$
b00000000000000000000000000000010 '&
b00000000000000000000000000000010 /&
b00000000000000000000000000000010 7&
1)'
#33
0)'
#34
b00000000000000000000000000000001 [
b00000000000000000000000000000011 Q#
1[$
1c$
b00000000000000000000000000000011 }%
b00000000000000000000000000000011 w&
1)'
#35
0)'
#36
b00000000000000000000000000000010 [
b00000000000000000000000000000011 5%
b00000000000000000000000000000011 W&
1)'
#37
0)'
#38
b00000000000000000000000000000011 [
1)'
#39
0)'
#40
b00000000000000000000000000000100 [
1)'
#41
0)'
#42
b00000000000000000000000000000101 [
0[$
1)'
#43
0)'
#44
b00000000000000000000000000000110 [
1)'
#45
0)'
#46
b00000000000000000000000000000111 [
b00000000000000000000000000000011 c
b00000000000000000000000000000011 l
b00000000000000000000000000000011 ;$
b00000000000000000000000000000011 C$
0c$
1)'
#47
0)'
#48
b00000000000000000000000000000000 [
b00000000000000000000000000000100 K$
b00000000000000000000000000000100 S$
b00000000000000000000000000000011 '&
b00000000000000000000000000000011 /&
b00000000000000000000000000000011 7&
1)'
#49
0)'
#50
b00000000000000000000000000000001 [
b00000000000000000000000000000100 Q#
1[$
1c$
b00000000000000000000000000000100 }%
b00000000000000000000000000000100 w&
1)'
#51
0)'
#52
b00000000000000000000000000000010 [
b00000000000000000000000000000100 5%
b00000000000000000000000000000100 W&
1)'
#53
0)'
#54
b00000000000000000000000000000011 [
1)'
#55
0)'
#56
b00000000000000000000000000000100 [
1)'
#57
0)'
#58
b00000000000000000000000000000101 [
0[$
1)'
#59
0)'
#60
b00000000000000000000000000000110 [
1)'
#61
0)'
#62
b00000000000000000000000000000111 [
b00000000000000000000000000000100 c
b00000000000000000000000000000100 l
b00000000000000000000000000000100 ;$
b00000000000000000000000000000100 C$
0c$
1)'
#63
0)'
#64
b00000000000000000000000000000000 [
b00000000000000000000000000000101 K$
b00000000000000000000000000000101 S$
b00000000000000000000000000000100 '&
b00000000000000000000000000000100 /&
b00000000000000000000000000000100 7&
1)'
#65
0)'
#66
b00000000000000000000000000000001 [
b00000000000000000000000000000101 Q#
1[$
1c$
b00000000000000000000000000000101 }%
b00000000000000000000000000000101 w&
1)'
#67
0)'
#68
b00000000000000000000000000000010 [
b00000000000000000000000000000101 5%
b00000000000000000000000000000101 W&
1)'
#69
0)'
#70
b00000000000000000000000000000011 [
1)'
#71
0)'
#72
b00000000000000000000000000000100 [
1)'
#73
0)'
#74
b00000000000000000000000000000101 [
0[$
1)'
#75
0)'
#76
b00000000000000000000000000000110 [
1)'
#77
0)'
#78
b00000000000000000000000000000111 [
b00000000000000000000000000000101 c
b00000000000000000000000000000101 l
b00000000000000000000000000000101 ;$
b00000000000000000000000000000101 C$
0c$
1)'
#79
0)'
#80
b00000000000000000000000000000000 [
b00000000000000000000000000000110 K$
b00000000000000000000000000000110 S$
b00000000000000000000000000000101 '&
b00000000000000000000000000000101 /&
b00000000000000000000000000000101 7&
1)'
#81
0)'
#82
b00000000000000000000000000000001 [
b00000000000000000000000000000110 Q#
1[$
1c$
b00000000000000000000000000000110 }%
b00000000000000000000000000000110 w&
1)'
#83
0)'
#84
b00000000000000000000000000000010 [
b00000000000000000000000000000110 5%
b00000000000000000000000000000110 W&
1)'
#85
0)'
#86
b00000000000000000000000000000011 [
1)'
#87
0)'
#88
b00000000000000000000000000000100 [
1)'
#89
0)'
#90
b00000000000000000000000000000101 [
0[$
1)'
#91
0)'
#92
b00000000000000000000000000000110 [
1)'
#93
0)'
#94
b00000000000000000000000000000111 [
b00000000000000000000000000000110 c
b00000000000000000000000000000110 l
b00000000000000000000000000000110 ;$
b00000000000000000000000000000110 C$
0c$
1)'
#95
0)'
#96
b00000000000000000000000000000000 [
b00000000000000000000000000000111 K$
b00000000000000000000000000000111 S$
b00000000000000000000000000000110 '&
b00000000000000000000000000000110 /&
b00000000000000000000000000000110 7&
1)'
#97
0)'
#98
b00000000000000000000000000000001 [
b00000000000000000000000000000111 Q#
1[$
1c$
b00000000000000000000000000000111 }%
b00000000000000000000000000000111 w&
1)'
#99
0)'
